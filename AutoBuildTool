#!/bin/bash

cd /home/lodge/Code/AutoBuildTools/

. ./allDefine.sh

CycleSelect=1

if [ $# == 0 ]; then
    Type_Chose=0

    tput reset      # clear screen;

    while [ $CycleSelect == 1 ]
    do
        echo -e "\n$blue/==================================================\\\\$clear"
        echo -e "$V_line $skyblue                 [ Main Menu ]                  $clear $V_line"
        echo -e "$V_line            $yellow***** Please choose *****$clear             $V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line$green_flash        ** Build ArmDebian file-system**          $clear$V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line $yellow  101:$clear buster          $V_line $yellow  102:$clear bullseye         $V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line$green_flash  ** STM32MP157 **                                $clear$V_line"
        echo -e "$blue|--------------------------------------------------|$clear"     
        echo -e "$V_line $yellow  1:$clear STlinux 5.4       $V_line $yellow  2:$clear STlinux 5.10       $V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line $yellow  9:$clear Restore Factory Image                       $V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line$green_flash  ** RaspBerryPi **                               $clear$V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line $yellow  3:$clear compile image     $V_line $yellow  4:$clear install image      $V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line$green_flash  ** OrangePi **                                  $clear$V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line $yellow  5:$clear all build                                   $V_line"
        echo -e "$blue|--------------------------------------------------|$clear"
        echo -e "$V_line                          $purple Q/B: Quit or Backup!$clear   $V_line"
        echo -e "$blue\\==================================================/$clear"
        echo -e "$yellow\n Your choice:$clear \c "
        
        read Type_Chose

        if [[ $Type_Chose == "q" || $Type_Chose == "Q" ]]; then
            exit 0
        fi

        if [[ $Type_Chose == "B" || $Type_Chose == "b" ]]; then     # 备份;
            cd $SHELL_ROOT_PATH/
            . ./backUp.sh
            exit 0
        fi

        if [[ $Type_Chose -eq 9 || $Type_Chose -eq 101 || $Type_Chose -eq 102 ]]; then
            break
        fi

        if [[ $Type_Chose -ge 1 && $Type_Chose -le 5 ]]; then       # 跳出循环;
            CycleSelect=0
        fi

        if [[ $Type_Chose -lt 1 || $Type_Chose -gt 5 ]]; then
            tput reset      # clear screen;
            echo -e "\n$blue/==================================================\\\\$clear"
            echo -e "$V_line $red_flash       Selection error,Please try again!        $clear $V_line"
            echo -e "$blue\\==================================================/$clear"
            Type_Chose=0
        fi

    done
else
    echo -e "\n$blue/==================================================\\\\$clear"
    echo -e "$V_line $red_flash    No parameters required,Please try again!    $clear $V_line"
    echo -e "$blue\\==================================================/$clear"
fi

#--------------------- Processing -------------------
if [[ $Type_Chose -eq 1 ]]; then
    linuxVersion="5.4"
    . ./stm32mp1/build_ST.sh
elif [[ $Type_Chose -eq 2 ]]; then
    linuxVersion="5.10"
    . ./stm32mp1/build_ST.sh

#----------------------------------------------------
elif [[ $Type_Chose -eq 5 ]]; then
    . ./H616/All_build.sh
    exit 0

#----------------------------------------------------
elif [[ $Type_Chose -eq 3 || $Type_Chose -eq 4 ]]; then
    if [[ $Type_Chose -eq 3 ]]; then
        echo -e "\n$purple Compile kernel for Pi3$yellow(T)$purple or Pi4$yellow(F)$purple? $red_flash(T/F)$clear \c"
        pi_str="compile"
    elif [[ $Type_Chose -eq 4 ]]; then
        echo -e "\n$purple Install kernel for Pi3$yellow(T)$purple or Pi4$yellow(F)$purple? $red_flash(T/F)$clear \c"
        pi_str="install"
    fi
    read PiType

    if [[ $PiType == "t" || $PiType == "T" ]]; then
        pi_ver_str="Pi3"
        KERNEL=kernel7
        KERNEL_PATH=$PATH_PI_SOURCE_pi3
    elif [[ $PiType == "f" || $PiType == "F" ]]; then
        pi_ver_str="Pi4"
        KERNEL=kernel7l
        KERNEL_PATH=$PATH_PI_SOURCE_pi4
    else
        echo -e "\n $blue/================================================\\\\$clear"
        echo -e " $V_line $red_flash         Input error,Please try again!        $clear $V_line"
        echo -e " $V_line $red_flash                Choose T or F!                $clear $V_line"
        echo -e " $blue\\================================================/$clear"
        exit 0
    fi

    . ./RaspBerry/build_RPi.sh

#----------------------------------------------------
elif [[ $Type_Chose -eq 9 ]]; then      # 恢复出厂镜像;
    upload_mode="factory"       
    . ./stm32mp1/flashFirmware.sh

#----------------------------------------------------
elif [[ $Type_Chose -eq 101 || $Type_Chose -eq 102 ]]; then
    if [[ $Type_Chose -eq 101 ]]; then
        echo -e "\n$purple Rebuilding$yellow(R)$purple or Packing$yellow(P)$purple an armBuster file system? $red_flash(R/P)$clear \c"
        OS_Choose=1
    elif [[ $Type_Chose -eq 102 ]]; then
        echo -e "\n$purple Rebuilding$yellow(R)$purple or Packing$yellow(P)$purple an armBullseye file system? $red_flash(R/P)$clear \c"
        OS_Choose=2
    fi
    read buildArmDebian_YN
    
    if [[ $buildArmDebian_YN == "r" || $buildArmDebian_YN == "R" ]]; then   
        . ./ArmDebian/build_debian.sh
    elif [[ $buildArmDebian_YN == "p" || $buildArmDebian_YN == "P" ]]; then
        . ./ArmDebian/pack_debian.sh
    else
        echo -e "\n $blue/================================================\\\\$clear"
        echo -e " $V_line $red_flash         Input error,Please try again!        $clear $V_line"
        echo -e " $V_line $red_flash                Choose R or P!                $clear $V_line"
        echo -e " $blue\\================================================/$clear"
    fi
fi
